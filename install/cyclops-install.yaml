apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  name: modules.cyclops-ui.com
spec:
  group: cyclops-ui.com
  names:
    kind: Module
    listKind: ModuleList
    plural: modules
    singular: module
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Module is the Schema for the modules API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            history:
              items:
                properties:
                  generation:
                    format: int64
                    type: integer
                  template:
                    properties:
                      path:
                        type: string
                      repo:
                        type: string
                      version:
                        type: string
                    required:
                      - path
                      - repo
                      - version
                    type: object
                  values:
                    x-kubernetes-preserve-unknown-fields: true
                required:
                  - generation
                  - template
                  - values
                type: object
              type: array
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ModuleSpec defines the desired state of Module
              properties:
                template:
                  properties:
                    path:
                      type: string
                    repo:
                      type: string
                    version:
                      type: string
                  required:
                    - path
                    - repo
                    - version
                  type: object
                values:
                  x-kubernetes-preserve-unknown-fields: true
              required:
                - template
                - values
              type: object
            status:
              description: ModuleStatus defines the observed state of Module
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be when
                          the underlying condition changed.  If that is not known, then
                          using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if .metadata.generation
                          is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                resources:
                  items:
                    properties:
                      group:
                        type: string
                      health:
                        type: string
                      kind:
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      status:
                        type: string
                      version:
                        type: string
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: v1
kind: Namespace
metadata:
  name: cyclops
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: ctrl
    app.kubernetes.io/name: cyclops-ctrl
    app.kubernetes.io/part-of: cyclops
  name: cyclops-ctrl
  namespace: cyclops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: ctrl
    app.kubernetes.io/name: cyclops-ctrl
    app.kubernetes.io/part-of: cyclops
  name: cyclops-ctrl
  namespace: cyclops
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
  - nonResourceURLs:
      - '*'
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: ctrl
    app.kubernetes.io/name: cyclops-ctrl
    app.kubernetes.io/part-of: cyclops
  name: cyclops-ctrl
  namespace: cyclops
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cyclops-ctrl
subjects:
  - kind: ServiceAccount
    name: cyclops-ctrl
    namespace: cyclops
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cyclops-ui
  namespace: cyclops
  labels:
    app: cyclops-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cyclops-ui
  template:
    metadata:
      labels:
        app: cyclops-ui
    spec:
      containers:
        - name: cyclops-ui
          image: cyclopsui/cyclops-ui:v0.0.1-alpha.12
          ports:
            - containerPort: 80
          env:
            - name: REACT_APP_CYCLOPS_CTRL_HOST
              value: http://localhost:8080 # http://cyclops-ctrl.cyclops:8080
            - name: NODE_ENV
              value: production
            - name: NODE_OPTIONS
              value: --openssl-legacy-provider
      restartPolicy: Always
---
kind: Service
apiVersion: v1
metadata:
  name: cyclops-ui
  namespace: cyclops
spec:
  type: LoadBalancer
  ports:
    - port: 3000
      targetPort: 80
      protocol: TCP
  selector:
    app: cyclops-ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cyclops-ctrl
  namespace: cyclops
  labels:
    app: cyclops-ctrl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cyclops-ctrl
  template:
    metadata:
      labels:
        app: cyclops-ctrl
    spec:
      serviceAccountName: cyclops-ctrl
      containers:
        - name: cyclops-ctrl
          image: cyclopsui/cyclops-ctrl:v0.0.1-alpha.12
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8082
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8082
            initialDelaySeconds: 5
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: cyclops-ctrl
  namespace: cyclops
  labels:
    app: cyclops-ctrl
spec:
  type: LoadBalancer
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: cyclops-ctrl
